diff -ru libc-orig/Makefile libc/Makefile
--- libc-orig/Makefile	2012-12-03 16:34:57.000000000 -0500
+++ libc/Makefile	2013-07-30 18:16:23.364682143 -0400
@@ -27,6 +27,12 @@
 CFLAGS+=-I${.CURDIR}/include -I${.CURDIR}/../../include
 CFLAGS+=-I${.CURDIR}/${LIBC_ARCH}
 CFLAGS+=-DNLS
+CFLAGS+=-I${KOSGCCDIR}
+CFLAGS+=-Wno-unused-label -Wno-unused-function -fno-strict-overflow
+CFLAGS+=-Wno-unused-variable
+CFLAGS+=-Wno-unused-but-set-variable -fno-strict-aliasing
+CFLAGS+=-I${.CURDIR}/../../sys -I${.CURDIR}/../../sys/sys
+CFLAGS+=-D__FreeBSD__
 CLEANFILES+=tags
 INSTALL_PIC_ARCHIVE=
 PRECIOUSLIB=
@@ -41,7 +46,7 @@
 #
 DPADD+=	${LIBGCC}
 LDFLAGS+= -nodefaultlibs
-LDADD+= -lgcc -lssp_nonshared
+LDADD+= -lgcc
 
 # Define (empty) variables so that make doesn't give substitution
 # errors if the included makefiles don't change these:
diff -ru libc-orig/net/Makefile.inc libc/net/Makefile.inc
--- libc-orig/net/Makefile.inc	2012-12-03 16:22:45.000000000 -0500
+++ libc/net/Makefile.inc	2013-07-30 18:50:20.585825392 -0400
@@ -37,7 +37,7 @@
 CLEANFILES+=nslexer.c
 
 nslexer.c: nslexer.l
-	${LEX} ${LFLAGS} -o/dev/stdout ${.IMPSRC} | \
+	${LEX} ${LFLAGS} -t ${.IMPSRC} | \
 		sed -e '/YY_BUF_SIZE/s/16384/1024/' >${.TARGET}
 
 MAN+=	byteorder.3 ethers.3 eui64.3 \
diff -ru libc-orig/quad/fixunsdfdi.c libc/quad/fixunsdfdi.c
--- libc-orig/quad/fixunsdfdi.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/fixunsdfdi.c	2013-07-30 18:08:23.733638845 -0400
@@ -39,7 +39,7 @@
 
 #include "quad.h"
 
-#define	ONE_FOURTH	(1 << (LONG_BITS - 2))
+#define	ONE_FOURTH	((long)1 << (LONG_BITS - 2))
 #define	ONE_HALF	(ONE_FOURTH * 2.0)
 #define	ONE		(ONE_FOURTH * 4.0)
 
diff -ru libc-orig/quad/fixunssfdi.c libc/quad/fixunssfdi.c
--- libc-orig/quad/fixunssfdi.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/fixunssfdi.c	2013-07-30 18:08:48.480359247 -0400
@@ -39,7 +39,7 @@
 
 #include "quad.h"
 
-#define	ONE_FOURTH	(1 << (LONG_BITS - 2))
+#define	ONE_FOURTH	((long)1 << (LONG_BITS - 2))
 #define	ONE_HALF	(ONE_FOURTH * 2.0)
 #define	ONE		(ONE_FOURTH * 4.0)
 
diff -ru libc-orig/quad/floatdidf.c libc/quad/floatdidf.c
--- libc-orig/quad/floatdidf.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/floatdidf.c	2013-07-30 18:09:21.653764628 -0400
@@ -65,7 +65,7 @@
 	 * code and does not know how to get at an exponent.  Machine-
 	 * specific code may be able to do this more efficiently.
 	 */
-	d = (double)u.ul[H] * ((1 << (LONG_BITS - 2)) * 4.0);
+	d = (double)u.ul[H] * (((long)1 << (LONG_BITS - 2)) * 4.0);
 	d += u.ul[L];
 
 	return (neg ? -d : d);
diff -ru libc-orig/quad/floatdisf.c libc/quad/floatdisf.c
--- libc-orig/quad/floatdisf.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/floatdisf.c	2013-07-30 18:09:35.827128749 -0400
@@ -67,7 +67,7 @@
 	 *
 	 * Using double here may be excessive paranoia.
 	 */
-	f = (double)u.ul[H] * ((1 << (LONG_BITS - 2)) * 4.0);
+	f = (double)u.ul[H] * (((long)1 << (LONG_BITS - 2)) * 4.0);
 	f += u.ul[L];
 
 	return (neg ? -f : f);
diff -ru libc-orig/quad/floatunsdidf.c libc/quad/floatunsdidf.c
--- libc-orig/quad/floatunsdidf.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/floatunsdidf.c	2013-07-30 18:09:51.510496155 -0400
@@ -51,7 +51,7 @@
 	union uu u;
 
 	u.uq = x;
-	d = (double)u.ul[H] * ((1 << (LONG_BITS - 2)) * 4.0);
+	d = (double)u.ul[H] * (((long)1 << (LONG_BITS - 2)) * 4.0);
 	d += u.ul[L];
 	return (d);
 }
diff -ru libc-orig/quad/qdivrem.c libc/quad/qdivrem.c
--- libc-orig/quad/qdivrem.c	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/qdivrem.c	2013-07-30 18:12:00.100775681 -0400
@@ -44,7 +44,7 @@
 
 #include "quad.h"
 
-#define	B	(1 << HALF_BITS)	/* digit base */
+#define	B	((long)1 << HALF_BITS)	/* digit base */
 
 /* Combine two `digits' to make a single two-digit number. */
 #define	COMBINE(a, b) (((u_long)(a) << HALF_BITS) | (b))
diff -ru libc-orig/quad/quad.h libc/quad/quad.h
--- libc-orig/quad/quad.h	2012-12-03 16:36:27.000000000 -0500
+++ libc/quad/quad.h	2013-07-30 18:10:35.567258559 -0400
@@ -89,7 +89,7 @@
  * (sizeof(long)*CHAR_BIT/2).
  */
 #define	HHALF(x)	((x) >> HALF_BITS)
-#define	LHALF(x)	((x) & ((1 << HALF_BITS) - 1))
+#define	LHALF(x)	((x) & (((long)1 << HALF_BITS) - 1))
 #define	LHUP(x)		((x) << HALF_BITS)
 
 int		__cmpdi2(quad_t a, quad_t b);
Only in libc: unknown
Only in libc: x86_64
