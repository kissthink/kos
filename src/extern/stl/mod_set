#ifndef _mod_set_
#define _mod_set_ 1

#include <set>
using namespace std;
#include "mod_stl_tree.h"  
#include "mod_stl_set.h"
#include "inplace_allocator.h"

template <typename _Key, size_t shift, typename _Compare = std::less<_Key>>
using InPlaceSet = modstd::set<_Key,_Compare,InPlaceAllocator<_Key,shift>>;

template <typename _Key, typename _Compare = std::less<_Key>>
using EmbeddedSet = modstd::set<_Key,_Compare,EmbeddedAllocator<_Key>>;

template <typename T>
class mod_set_elem {
	char _linkage[sizeof(_Rb_tree_node<T>)];
public:
	uintptr_t alloc() const { return (uintptr_t)(this); }
};

#endif /* _mod_set_ */
